{"version":3,"sources":["components/context.js","components/NewPost.js","components/NewComment.js","components/LikeButton.js","components/PlainCommentPost.js","components/PostPreview.js","components/Paginator.js","components/Views/FeedView.js","components/Views/IndexView.js","components/AccountID.js","components/Views/ProfileView.js","components/Post.js","components/Comment.js","components/Views/PostView.js","components/Views/LoginView.js","components/Views/NotFoundView.js","components/NavBar.js","components/App.js","serviceWorker.js","index.js"],"names":["LoginContext","React","createContext","axios","require","NewPost","props","useState","content","setContent","warnBar","setWarnBarn","status","setStatus","LoginStatus","useContext","event","a","preventDefault","console","log","URL","window","location","origin","body","defaults","headers","common","userToken","post","response","ok","rerender","data","className","role","width","height","src","userAvatar","alt","type","placeholder","name","form","id","value","onChange","e","target","onSubmit","alert","onClick","NewComment","submitNewPost","LikeButton","likeState","setLikeState","dislikeState","setDislikeState","LikeDislike","option","EndPoint","get","edit","useEffect","authorLiked","authorDisliked","fill","likeCount","dislikeCount","CommentPreview","to","author","avatar","username","PostPreview","state","comments","error","editComment","bind","editPost","index","this","setState","oldState","slice","map","PlainCommentPost","key","create_at","Component","Paginator","numPages","setNumPages","Math","floor","postCount","resultsPerPage","items","currentPage","push","Pagination","Item","changePostPage","unshift","paginationBasic","FeedView","rerenderComment","rerenderPost","pageNum","fetch","method","context","message","badrequest","text","json","results","postIndex","getPost","response1","oldstate","count","Posts","length","contextType","IndexView","AccountID","followUnfollow","setFollowUnfollow","userData","followers","some","pk","b","userID","about","num_followers","num_following","sameUser","Profile","user","mouseOverAvatar","rerenderizer","isSameuser","editProfile","Promise","all","getUserProfile","getUserPost","then","postData","catch","command","match","params","userid","resolve","Post","commentOptions","setCommentOptions","editMode","setEditMode","toggleOptions","put","isAuthor","dropDownMenu","class","editWrapper","Comment","PostView","createComment","baseURL","postid","response2","reverse","Comments","comment","Access","password","password_retype","email","login","redirect","handleForm","register","toogleRegister","getUserAvatar","JSON","stringify","Error","arg","token","changeLoggedIn","action","for","NotFoundView","NavBar","isSearchCollapsed","setSearchCollapse","history","useHistory","setValue","useForceUpdate","CustomToggle","forwardRef","ref","children","href","Dropdown","Toggle","as","Menu","eventKey","App","getuserID","getuserToken","getuserAvatar","sessionStorage","getItem","removeItem","setItem","Provider","path","component","LoginView","render","friends","random","ProfileView","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a183a863.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const LoginContext = React.createContext();\r\n","import React, { useState, useContext } from 'react';\r\nimport Picker from 'emoji-picker-react';\r\nimport { LoginContext } from './context'\r\nconst axios = require('axios')\r\n\r\n/**\r\n*   This component display an input option for a new comment/Post\r\n*   it requires the following props:\r\n*   type: 'post' or 'comment'\r\n*   rerender: to add the post/comment in the list \r\n**/\r\n\r\nfunction NewPost(props) {\r\n\r\n    const [chosenEmoji, setChosenEmoji] = useState(null);\r\n    const [content, setContent] = useState(\"\");\r\n    const [warnBar, setWarnBarn] = useState(null)\r\n    const [status, setStatus] = useState(null)\r\n    const LoginStatus = useContext(LoginContext)\r\n\r\n\r\n    const onEmojiClick = (event, emojiObject) => {\r\n        setChosenEmoji(emojiObject);\r\n    };\r\n\r\n    async function submitNewPost(event) {\r\n        if (event && event.preventDefault) {\r\n            console.log(\"hi\")\r\n            event.preventDefault();\r\n        }\r\n\r\n        const URL = window.location.origin + '/api/post/'\r\n        const body = { \"content\": content }\r\n\r\n        axios.defaults.headers.common['Authorization'] = 'token ' + LoginStatus.userToken\r\n\r\n        const response = await axios.post(URL, body)\r\n\r\n        if (!response.ok) {\r\n            const message = `An error has occured: ${response.status}`;\r\n            setWarnBarn(\"alert alert-danger\")\r\n            setStatus('error')\r\n        }\r\n\r\n        setWarnBarn(\"alert alert-success\")\r\n        setStatus('Your post was created!')\r\n        props.rerender(response.data)\r\n    }\r\n\r\n    return (\r\n        <div className=\"newPost Container flex-row\">\r\n\r\n            <div className={warnBar ? warnBar : 'd-none'} role=\"alert\">\r\n                {status}\r\n            </div>\r\n            <div className=\"row flex-row\">\r\n                <div className=\"col-xs-2 p-auto m-auto\">\r\n                    <img\r\n                        className=\"postAvatar rounded-circle align-self-start m-1 mr-2 \"\r\n                        width=\"50\"\r\n                        height=\"50\"\r\n                        src={LoginStatus.userAvatar}\r\n                        alt=\"User Avatar\" />\r\n                </div>\r\n                <div className=\"flex-grow-1 m-auto\">\r\n                    <input type=\"text\"\r\n                        placeholder=\"what's in your mind?\"\r\n                        className='flex-grow-0 textAnswer form-control'\r\n                        name=\"answer\"\r\n                        form='Testing'\r\n                        id=\"postanswer\"\r\n                        value={content}\r\n                        onChange={(e) => setContent(e.target.value)}\r\n                        onSubmit={alert} />\r\n                </div>\r\n                <form id='newPost'\r\n                    className=' pl-1 m-auto submit-form pt-2 pb-2 pl-2'\r\n                    name=\"Testing\">\r\n                        <input\r\n                            type=\"button\"\r\n                            value=\"Submit\"\r\n                            className='btn btn-light newPostSubmit w-100'\r\n                            onClick={submitNewPost} />\r\n                </form>\r\n\r\n                {/* <div className=\"avatar col-xs-3\"></div>\r\n                <div className=\"TextArea flex-grow-1\"></div>\r\n                <div className=\"Emojis col-xs-3\">\r\n                <div>\r\n                    {chosenEmoji ? (\r\n                        <span>You chose: {chosenEmoji.emoji}</span>\r\n                    ) : (\r\n                        <span>No emoji Chosen</span>\r\n                    )}\r\n                    <Picker onEmojiClick={onEmojiClick} />\r\n                    </div>\r\n                </div> */}\r\n                {/* https://www.npmjs.com/package/emoji-picker-react */}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default NewPost;","import React, { useState, useContext } from 'react';\r\nimport Picker from 'emoji-picker-react';\r\nimport { LoginContext } from './context'\r\nconst axios = require('axios')\r\n\r\n/**\r\n*   This component display an input option for a new comment/Post\r\n*   it requires the following props:\r\n*   type: 'post' or 'comment'\r\n*   rerender: to add the post/comment in the list \r\n**/\r\n\r\nfunction NewComment(props) {\r\n\r\n    const [chosenEmoji, setChosenEmoji] = useState(null);\r\n    const [content, setContent] = useState(\"\");\r\n    const [warnBar, setWarnBarn] = useState(null)\r\n    const [status, setStatus] = useState(null)\r\n    const LoginStatus = useContext(LoginContext)\r\n\r\n\r\n    const onEmojiClick = (event, emojiObject) => {\r\n        setChosenEmoji(emojiObject);\r\n    };\r\n\r\n    async function submitNewPost(event) {\r\n        if (event && event.preventDefault) {\r\n            event.preventDefault();\r\n        }\r\n        const URL = window.location.origin + `/api/post/comment/${props.post.id}/`\r\n        const body = {\r\n            \"content\": content,\r\n            \"posts\": props.post.id\r\n        }\r\n\r\n        axios.defaults.headers.common['Authorization'] = 'token ' + LoginStatus.userToken\r\n\r\n        const response = await axios.post(URL, body)\r\n\r\n        if (!response.ok) {\r\n            const message = `An error has occured: ${response.status}`;\r\n            setWarnBarn(\"alert alert-danger\")\r\n            setStatus('error')\r\n        }\r\n        setWarnBarn(\"alert alert-success\")\r\n        setStatus('Your post was created!')\r\n        props.rerender(response.data)\r\n    }\r\n\r\n    return (\r\n        <div className=\"newPost Container flex-row\">\r\n\r\n            <div className={warnBar ? warnBar : 'd-none'} role=\"alert\">\r\n                {status}\r\n            </div>\r\n            <div className=\"row flex-nowrap \">\r\n                <div className=\"col-xs-2 p-auto m-auto\">\r\n                    <img\r\n                        className=\"postAvatar rounded-circle align-self-start m-1 mr-2 \"\r\n                        width=\"50\"\r\n                        height=\"50\"\r\n                        src={LoginStatus.userAvatar}\r\n                        alt=\"User Avatar\" />\r\n                </div>\r\n                <div className=\"flex-grow-1 m-auto\">\r\n                    <input type=\"text\"\r\n                        placeholder=\"what's in your mind?\"\r\n                        className='flex-grow-0 textAnswer form-control'\r\n                        name=\"answer\"\r\n                        form='newPost'\r\n                        id=\"postanswer\"\r\n                        value={content}\r\n                        onChange={(e) => setContent(e.target.value)}\r\n                        onSubmit={submitNewPost} />\r\n                </div>\r\n                <form id='newPost'\r\n                    className=' pl-1 m-auto submit-form pt-2 pb-2 pl-2'\r\n                    name=\"Testing\">\r\n                        <input\r\n                            type=\"button\"\r\n                            value=\"Submit\"\r\n                            className='btn btn-light newPostSubmit w-100'\r\n                            onClick={submitNewPost} />\r\n                </form>\r\n\r\n                {/* <div className=\"avatar col-xs-3\"></div>\r\n                <div className=\"TextArea flex-grow-1\"></div>\r\n                <div className=\"Emojis col-xs-3\">\r\n                <div>\r\n                    {chosenEmoji ? (\r\n                        <span>You chose: {chosenEmoji.emoji}</span>\r\n                    ) : (\r\n                        <span>No emoji Chosen</span>\r\n                    )}\r\n                    <Picker onEmojiClick={onEmojiClick} />\r\n                    </div>\r\n                </div> */}\r\n                {/* https://www.npmjs.com/package/emoji-picker-react */}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default NewComment;","import React, { useState, useEffect, useContext } from 'react';\r\nimport { LoginContext } from './context'\r\nimport { HeartFill, Heart, HandThumbsDown } from 'react-bootstrap-icons';\r\nconst axios = require('axios')\r\n\r\n\r\nfunction LikeButton(props) {\r\n    const LoginStatus = useContext(LoginContext)\r\n    const [likeState, setLikeState] = useState(false)\r\n    const [dislikeState, setDislikeState] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setLikeState(props.post.authorLiked)\r\n        setDislikeState(props.post.authorDisliked)\r\n    }, [])\r\n\r\n    async function LikeDislike(option) {\r\n        \r\n        axios.defaults.headers.common['Authorization'] = 'token ' + LoginStatus.userToken\r\n        const EndPoint = window.location.origin + `/api/${props.type}/${option}/${props.post.id}/`\r\n        try {\r\n            const response = await axios.get(EndPoint)\r\n            if (option == 'like'){\r\n                if (likeState == false) setDislikeState(false)\r\n                setLikeState(!likeState)\r\n            }\r\n            else {\r\n                if(dislikeState == false) setLikeState(false)\r\n                setDislikeState(!dislikeState)\r\n            }\r\n            console.log(response.data)\r\n            props.edit(response.data)\r\n        } catch {\r\n            return 0\r\n        }\r\n    }\r\n\r\n    return <div>\r\n        <Heart fill={likeState?'red':''} className='heart mb-2' onClick={() => LikeDislike('like')} /> {props.post.likeCount}\r\n        <HandThumbsDown fill={dislikeState?'red':''} className='ml-2 heart mb-2' onClick={() => LikeDislike('dislike')} /> {props.post.dislikeCount}\r\n    </div>\r\n\r\n}\r\n\r\nexport default LikeButton;","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport LikeButton from './LikeButton'\r\n\r\nfunction CommentPreview(props) {\r\n    return (\r\n        <div className='UserInfo d-flex position-relative'>\r\n            <Link to={'/users/' + props.post.author.id}>\r\n                <img\r\n                    className=\"PostAvatar rounded-circle align-self-start m-1 mr-2\"\r\n                    width=\"50\"\r\n                    height=\"50\"\r\n                    src={props.post.author.avatar}\r\n                    alt=\"User Avatar\" />\r\n            </Link>\r\n            <div className=\"media-body mr-2\">\r\n                <Link to={'/users/' + props.post.author.id}>\r\n                    <h5\r\n                        className=\"name\">\r\n                        {props.post.author.username}\r\n                    </h5>\r\n                </Link>\r\n                <div className=\"\">\r\n                    <p className='row col-12'>\r\n                        {props.post.content}\r\n                    </p>\r\n                </div>\r\n                <LikeButton\r\n                    post={props.post}\r\n                    type={'post'}\r\n                    edit={false} />\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default CommentPreview;","import React from 'react';\r\nimport PlainCommentPost from './PlainCommentPost'\r\nimport { Link } from 'react-router-dom'\r\nconst axios = require('axios')\r\n\r\n// This component should be wrapped on the PostView\r\n// it also display the first 2comments of each post\r\n\r\n\r\nclass PostPreview extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            post: false,\r\n            comments: false,\r\n            error: null\r\n        }\r\n        this.editComment = this.editComment.bind(this)\r\n        this.editPost = this.editPost.bind(this)\r\n    }\r\n    // need some hooks to hide unhide part of the post_text\r\n\r\n    editComment(index, data) {\r\n        this.setState((oldState) => {\r\n            oldState.comments[index] = data\r\n            return oldState\r\n        })\r\n    }\r\n\r\n    editPost(data) {\r\n        this.setState((oldState) => {\r\n            oldState.post = data\r\n            return oldState\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const comments = this.props.post.comments.slice(0, 2).map((comments, index) => {\r\n            return (\r\n                <PlainCommentPost\r\n                    post={comments}\r\n                    key={index} />\r\n            )\r\n        });\r\n        return (\r\n            <div className=\"post m-1 mb-0 \">\r\n                <div className='UserInfo d-flex m-1 position-relative'>\r\n                    <Link to={'/post/' + this.props.post.id}>\r\n                        <PlainCommentPost\r\n                            post={this.props.post} />\r\n                        <div className='position-absolute timeStamp'>{this.props.post.create_at}</div>\r\n                    </Link>\r\n                </div>\r\n                {this.props.post.comments != false ?  <Link to={'/post/' + this.props.post.id}>\r\n                        <div className=\"commentsWrap\">\r\n                            {comments}\r\n                        </div>\r\n                    </Link> : ''}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PostPreview;","import React, { useState, useEffect } from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\n\r\n\r\nexport const Paginator = (props) => {\r\n\r\n    const [numPages, setNumPages] = useState(null)\r\n\r\n    useEffect(() => {\r\n        setNumPages(Math.floor(props.postCount / props.resultsPerPage))\r\n    }, [props]);\r\n\r\n\r\n\r\n    let items = []\r\n    console.log(props.currentPage, numPages)\r\n    if (props.currentPage < numPages) {\r\n        items.push(\r\n            <Pagination.Item key={2} onClick={() => props.changePostPage(props.currentPage+1)}>\r\n                Next\r\n            </Pagination.Item>,\r\n        );\r\n    }\r\n    if (props.currentPage != 1) {\r\n        items.unshift(\r\n            <Pagination.Item key={1} onClick={() => props.changePostPage(props.currentPage-1)}>\r\n                Previous\r\n            </Pagination.Item>,\r\n        );\r\n    }\r\n\r\n\r\n    const paginationBasic = (\r\n        <div>\r\n            <Pagination>{items}</Pagination>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            {paginationBasic}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport NewPost from '../NewPost'\r\nimport NewComment from '../NewComment'\r\nimport PostPreview from '../PostPreview'\r\nimport { LoginContext } from '../context'\r\nimport Paginator from '../Paginator'\r\nconst axios = require('axios')\r\n\r\n\r\nclass FeedView extends React.Component {\r\n    static contextType = LoginContext\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            post: [],\r\n            error: null,\r\n            postCount: null,\r\n            currentPage: 1\r\n        }\r\n        this.rerenderComment = this.rerenderComment.bind(this)\r\n        this.rerenderPost = this.rerenderPost.bind(this)\r\n        this.changePostPage = this.changePostPage.bind(this)\r\n    }\r\n\r\n    async changePostPage(pageNum) {\r\n\r\n        if (pageNum === this.state.currentPage) { return 0 }\r\n        const URL = window.location.origin + `/api/post/friends/?page=${pageNum}`\r\n\r\n        const response = await fetch(URL, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': 'token ' + this.context.userToken,\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n\r\n        if (!response.ok) {\r\n            const message = `An error has occured: ${response.status}`;\r\n            console.log(message)\r\n            return this.setState({ badrequest: response.text() })\r\n        }\r\n        const data = await response.json()\r\n\r\n        return this.setState((oldState) => {\r\n            oldState.post = data.results\r\n            oldState.currentPage = pageNum\r\n            return oldState\r\n        })\r\n    }\r\n    rerenderComment(data, postIndex) {\r\n        // to work with strict mode\r\n        this.setState((oldState) => {\r\n            oldState.post[postIndex].comments.unshift(data)\r\n            return oldState\r\n        })\r\n    }\r\n    rerenderPost(data) {\r\n        // to work with strict mode\r\n        this.setState((oldState) => {\r\n            oldState.post.unshift(data)\r\n            return oldState\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getPost()\r\n    }\r\n\r\n    async getPost() {\r\n        //fetch it using the this.state.friends\r\n        axios.defaults.headers.common['Authorization'] = 'token ' + this.context.userToken\r\n\r\n        const response1 = axios.get(`/api/post/friends/`)\r\n        let post\r\n        try {\r\n            post = await response1\r\n        } catch (er) {\r\n            console.error(er)\r\n            this.setState((oldstate) => {\r\n                oldstate.error = er\r\n                return oldstate\r\n            })\r\n        }\r\n        this.setState((oldstate) => {\r\n            oldstate.post = post.data.results\r\n            oldstate.postCount = post.data.count\r\n            return oldstate\r\n        })\r\n        console.log(post.data.results)\r\n    }\r\n\r\n    render() {\r\n\r\n        let Posts = this.state.post.map((value, index) => {\r\n            return (\r\n                <div className=\"postPreview col-xl-12\" key={index}>\r\n                    <PostPreview \r\n                    key={index} \r\n                    post={value}\r\n                     />\r\n                    <NewComment\r\n                        post={value} rerender={(data) => this.rerenderComment(data, index)} />\r\n                </div>\r\n            )\r\n        })\r\n        return (\r\n            <div className=\"PostWrapWrap container\">\r\n                <div className='postWrap row m-3'>\r\n                    <div className=\"Post col-xl-12 \">\r\n                        <NewPost rerender={this.rerenderPost} />\r\n                    </div>\r\n                </div>\r\n\r\n                {Posts}\r\n                <Paginator postCount={this.state.postCount}\r\n                    resultsPerPage={this.state.post.length}\r\n                    changePostPage={this.changePostPage}\r\n                    currentPage={this.state.currentPage}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FeedView;","import React from 'react';\r\nimport NewPost from '../NewPost'\r\nimport NewComment from '../NewComment'\r\nimport PostPreview from '../PostPreview'\r\nimport { LoginContext } from '../context'\r\nimport Paginator from '../Paginator'\r\n\r\n\r\nconst axios = require('axios')\r\n\r\n\r\nclass IndexView extends React.Component {\r\n    static contextType = LoginContext\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            post: [],\r\n            error: null,\r\n            currentPage:1,\r\n            postCount:null\r\n        }\r\n        this.rerenderComment = this.rerenderComment.bind(this)\r\n        this.rerenderPost = this.rerenderPost.bind(this)\r\n        this.changePostPage = this.changePostPage.bind(this)\r\n\r\n    }\r\n\r\n    rerenderComment(data, postIndex) {\r\n        // to work with strict mode\r\n        this.setState((oldState) => {\r\n            oldState.post[postIndex].comments.unshift(data)\r\n            return oldState\r\n        })\r\n    }\r\n    rerenderPost(data) {\r\n        // to work with strict mode\r\n        this.setState((oldState) => {\r\n            oldState.post.unshift(data)\r\n            return oldState\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getPost()\r\n    }\r\n\r\n    async changePostPage(pageNum) {\r\n        if (pageNum === this.state.currentPage){ return 0 }\r\n        const URL = window.location.origin + `/api/post/?page=${pageNum}`\r\n\r\n        const response = await fetch(URL, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': 'token ' + this.context.userToken,\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n\r\n        if (!response.ok) {\r\n            const message = `An error has occured: ${response.status}`;\r\n            console.log(message)\r\n            return this.setState({ badrequest: response.text() })\r\n        }\r\n        const data = await response.json()\r\n\r\n        return this.setState((oldState) => {\r\n            oldState.post = data.results\r\n            oldState.currentPage = pageNum\r\n            return oldState\r\n        })\r\n            \r\n    }\r\n    async getPost() {\r\n        //fetch it using the this.state.friends\r\n        axios.defaults.headers.common['Authorization'] = 'token ' + this.context.userToken\r\n\r\n        const response1 = axios.get(`/api/post/`)\r\n        let post\r\n        try {\r\n            post = await response1\r\n        } catch (er) {\r\n            console.error(er)\r\n            this.setState((oldstate) => {\r\n                oldstate.error = er\r\n                return oldstate\r\n            })\r\n        }\r\n        this.setState((oldstate) => {\r\n            oldstate.post = post.data.results\r\n            oldstate.postCount = post.data.count\r\n            return oldstate\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        let Posts = this.state.post.map((value, index) => {\r\n            return (\r\n                <div className=\"postPreview col-xl-12\" >\r\n                    <PostPreview key={index} post={value} />\r\n                    <NewComment\r\n                        post={value} rerender={(data) => this.rerenderComment(data, index)} />\r\n                </div>\r\n            )\r\n        })\r\n        return (\r\n            <div className=\"PostWrapWrap container\">\r\n                <div className='postWrap row m-3'>\r\n                    <div className=\"Post col-xl-12 \">\r\n                        <NewPost rerender={this.rerenderPost} />\r\n                    </div>\r\n                </div>\r\n\r\n                {Posts}\r\n                <Paginator postCount={this.state.postCount}\r\n                                resultsPerPage={this.state.post.length}\r\n                                changePostPage={this.changePostPage}\r\n                                currentPage={this.state.currentPage}\r\n                            />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default IndexView;","import React, {useState, useContext, useEffect} from 'react';\r\nimport { LoginContext } from './context'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nfunction AccountID(props){\r\n\r\n    const LoginStatus = useContext(LoginContext)\r\n    const [dropdown, setDropDown] = useState(false); // integer state\r\n    const [followUnfollow, setFollowUnfollow] = useState(); // integer state\r\n    \r\n    function isEqual(a, b){ return (a==b)? true : false}\r\n\r\n    useEffect(() => {\r\n        setFollowUnfollow(props.userData.followers? // Did the API call resolved already?\r\n            props.userData.followers.some( // if yes, is any user in the followers array\r\n                (e) => {\r\n                    return isEqual(e.pk, LoginStatus.userID)} //  equal to the session user?\r\n            )\r\n            : 0); // if the data haven`t resolved, just set to 0\r\n      }, [props]); // if you exclude, it doesn't let u change state\r\n      \r\n    async function followUnfollowFunc() {\r\n        let currentState = followUnfollow // for use in development enviorment\r\n        console.log(`test`)\r\n        // the state occur prior to the request just to make it pretty.\r\n        setFollowUnfollow(!followUnfollow)\r\n        const URL = window.location.origin + `/api/user/follow/${props.userData.id}/`\r\n        const response = await fetch(URL, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': 'token ' + LoginStatus.userToken,\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n\r\n        if (!response.ok) {\r\n            const message = `An error has occured: ${response.status}`;\r\n            console.log(message)\r\n            // error to do!  \r\n            //this.setState({ badrequest: response.text() })\r\n        }\r\n    }\r\n\r\n\r\n      // TODO: build dropdown.\r\n\r\n\r\n    return (\r\n        <div className='row pt-3'>\r\n            <div className=\"avatar col-xs-10 col-md-4 d-flex justify-content-center\">\r\n                <img \r\n                    src={props.userData.avatar} \r\n                    className=\"PostAvatar rounded-circle align-self-start m-1 mr-2\"\r\n                    width=\"100\"\r\n                    height=\"120\"\r\n                    alt=\"User Avatar\" />\r\n            </div>\r\n            <div className=\"profileData col-xs-10 col-md-8 d-flex justify-content-center flex-column container\">\r\n                <div className=\"name\"> <h2>{props.userData.username}</h2></div>\r\n                <div className=\"about\"><h5>{props.userData.about}</h5></div>\r\n                <div className=\"row\">\r\n                <Link className=\"\" to=\"/home\">\r\n                    <div className=\"follower col-md-2 col-5 text-nowrap\">{props.userData.num_followers? props.userData.num_followers: 0} Followers </div>\r\n                </Link>\r\n                <Link className=\"\" to=\"/home\">\r\n                    <div className=\"follower col-md-2 col-5 text-nowrap\">{props.userData.num_following? props.userData.num_following: 0} Following</div>\r\n                </Link>\r\n                </div>\r\n                <div className=\"pt-3 pb-3\">\r\n                \r\n                {!props.sameUser &&\r\n                <div className=\"followUnfollow\">\r\n                    <form onClick={followUnfollowFunc}>\r\n                    <input\r\n                            type=\"button\"\r\n                            value={followUnfollow? 'Unfollow': 'Follow'}\r\n                            className='btn btn-success followUnfollow' />\r\n                    </form>\r\n                </div>\r\n                }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default AccountID;","import React from 'react';\r\nimport PostPreview from '../PostPreview'\r\nimport AccountID from '../AccountID'\r\nimport NewPost from '../NewPost'\r\nimport Paginator from '../Paginator'\r\n\r\nimport { LoginContext } from '../context'\r\n\r\n\r\nclass Profile extends React.Component {\r\n\r\n    static contextType = LoginContext\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            user: null,\r\n            post: false,\r\n            mouseOverAvatar: false,\r\n            sameUser: [],\r\n            userData: [],\r\n            rerenderizer: false,\r\n            error: null,\r\n            postCount: null,\r\n            currentPage: 1\r\n        }\r\n        this.isSameuser = this.isSameuser.bind(this)\r\n        this.rerenderPost = this.rerenderPost.bind(this)\r\n        this.changePostPage = this.changePostPage.bind(this)\r\n        this.editProfile = this.editProfile.bind(this)\r\n    }\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        try {\r\n            if (props.match.params.userid) {\r\n                return {\r\n                    user: props.match.params.userid\r\n                };\r\n            }\r\n        }\r\n        catch (e) {\r\n            return {}\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        await this.isSameuser()\r\n        Promise.all([this.getUserProfile(), this.getUserPost()])\r\n            .then(([userData, postData]) => {\r\n                console.log(postData)\r\n                this.setState((oldState) => {\r\n                    oldState.userData = userData\r\n                    oldState.post = postData.results\r\n                    oldState.postCount = postData.count\r\n                    return oldState\r\n                })\r\n            })\r\n            .catch((e) => {\r\n                return this.setState({ userData: \"unknow error\" })\r\n            })\r\n    }\r\n    async getUserProfile() {\r\n\r\n        const URL = window.location.origin + `/api/user/${this.state.user}/`\r\n        const response = await fetch(URL, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': 'token ' + this.context.userToken,\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n\r\n        if (!response.ok) {\r\n            const message = `An error has occured: ${response.status}`;\r\n            console.log(message)\r\n            this.setState((oldState) => { oldState.error = response.text() })\r\n        }\r\n\r\n\r\n        const data = await response.json()\r\n        return data\r\n    }\r\n    async getUserPost() {\r\n\r\n        const URL = window.location.origin + `/api/user/post/${this.state.user}/`\r\n\r\n        const response = await fetch(URL, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': 'token ' + this.context.userToken,\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n\r\n        if (!response.ok) {\r\n            const message = `An error has occured: ${response.status}`;\r\n            console.log(message)\r\n            this.setState({ badrequest: response.text() })\r\n        }\r\n\r\n        const data = response.json()\r\n\r\n        return data\r\n\r\n    }\r\n    async changePostPage(pageNum) {\r\n\r\n        if (pageNum === this.state.currentPage){ return 0 }\r\n        const URL = window.location.origin + `/api/user/post/${this.state.user}/?page=${pageNum}`\r\n\r\n        const response = await fetch(URL, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': 'token ' + this.context.userToken,\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n\r\n        if (!response.ok) {\r\n            const message = `An error has occured: ${response.status}`;\r\n            console.log(message)\r\n            return this.setState({ badrequest: response.text() })\r\n        }\r\n        const data = await response.json()\r\n\r\n        return this.setState((oldState) => {\r\n            oldState.post = data.results\r\n            oldState.currentPage = pageNum\r\n            return oldState\r\n        })\r\n            \r\n    }\r\n\r\n    editProfile(command){\r\n        command = command ? 1 : -1 \r\n        this.setState((oldState) => {\r\n            oldState.userData.num_followers += command\r\n            return oldState\r\n        })\r\n    }\r\n\r\n    isSameuser() {\r\n        try {\r\n            if (this.props.match.params.userid == this.context.userID) {\r\n                this.setState((oldState) => {\r\n                    oldState.sameUser = true;\r\n                    return oldState\r\n                })\r\n            } else {\r\n                this.setState((oldState) => {\r\n                    oldState.sameUser = false;\r\n                    return oldState\r\n                })\r\n            }\r\n        } catch {\r\n            this.setState((oldState) => {\r\n                oldState.user = this.context.userID\r\n                oldState.sameUser = true;\r\n                return oldState\r\n            })\r\n        }\r\n        return Promise.resolve(1)\r\n\r\n    }\r\n    rerenderPost(data) {\r\n        // to work with strict mode\r\n        this.setState((oldState) => {\r\n            oldState.post.unshift(data)\r\n            return oldState\r\n        })\r\n    }\r\n    render() {\r\n        let Posts = 'hi'\r\n        if (this.state.post) {\r\n            Posts = this.state.post.map((value, index) => {\r\n                return (\r\n                    <div className=\"postPreview col-6 col-md-4 col-xl-4\" >\r\n                        <PostPreview\r\n                            key={index}\r\n                            post={value} />\r\n                    </div>\r\n                )\r\n            })\r\n\r\n        }\r\n       return (\r\n            <div>\r\n                <div className=\"AccountIDWrap container \">\r\n                    {/*  avatar dropdown will be handle on the AccountID component \r\n                     Follow Unfollow button will be handle also, and not show if onwer*/}\r\n                    <AccountID sameUser={this.state.sameUser}\r\n                        userData={this.state.userData}\r\n                        edit={this.editProfile} />\r\n                </div>\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center m-3\">\r\n                        <div className=\"col-10\">\r\n                            {this.state.sameUser &&\r\n                                <NewPost\r\n                                    rerender={this.rerenderPost}\r\n                                    type={'post'} />}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div className=\"postPreviewWrapWrap container\">\r\n                        <div className='postPreviewWrap row'>\r\n                            {Posts}\r\n                            <Paginator postCount={this.state.postCount}\r\n                                resultsPerPage={this.state.post.length}\r\n                                changePostPage={this.changePostPage}\r\n                                currentPage={this.state.currentPage}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile;","import React, { useState, useContext } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { LoginContext } from './context'\r\nimport LikeButton from './LikeButton'\r\nconst axios = require('axios')\r\n\r\n\r\nfunction Post(props) {\r\n    const [commentOptions, setCommentOptions] = useState(false)\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [content, setContent] = useState(\"\");\r\n    const LoginStatus = useContext(LoginContext)\r\n\r\n\r\n    function toggleOptions() {\r\n        setCommentOptions(!commentOptions)\r\n    }\r\n    function toggleEdit() {\r\n        setContent(props.post.content)\r\n        setEditMode(!editMode)\r\n        setCommentOptions(!commentOptions)\r\n    }\r\n    async function editPost(event) {\r\n        if (event && event.preventDefault) {\r\n            event.preventDefault();\r\n        }\r\n        const URL = window.location.origin + `/api/post/${props.post.id}/`\r\n        const body = {\r\n            \"content\": content,\r\n            \"posts\": props.post.id\r\n        }\r\n\r\n        axios.defaults.headers.common['Authorization'] = 'token ' + LoginStatus.userToken\r\n\r\n        const response = await axios.put(URL, body)\r\n\r\n        if (!response.ok) {\r\n            const message = `An error has occured: ${response.status}`;\r\n        }\r\n        setEditMode(false)\r\n        props.editPost(response.data)\r\n    }\r\n    function del() {\r\n        setEditMode(!editMode)\r\n    }\r\n\r\n    function keyPress(e) {\r\n        console.log(\"f\")\r\n        if (e.key === \"Escape\") {\r\n            // write your logic here.\r\n        }\r\n    }\r\n\r\n    const isAuthor = (props.post.author.id == LoginStatus.userID)\r\n\r\n    const dropDownMenu =\r\n        <div class=\"dropdown-menu d-block position-relative drop-down-edit-deleted-comment-post\">\r\n            <a onClick={toggleEdit} className=\"dropdown-item\">Edit</a>\r\n            <a class=\"dropdown-item\" >Delete</a>\r\n        </div>\r\n\r\n\r\n    const editWrapper =\r\n        <div className=\"container\">\r\n            <form id='newPost' className='row flex-row'>\r\n                <input type=\"text\"\r\n                    placeholder=\"what's in your mind?\"\r\n                    className=' col-8 col-md-9 col-xl-10 flex-grow-0 textAnswer form-control mr-2'\r\n                    name=\"answer\"\r\n                    form='newPost'\r\n                    id=\"postanswer\"\r\n                    value={content}\r\n                    onChange={(e) => setContent(e.target.value)} />\r\n                <input\r\n                    type=\"submit\"\r\n                    value=\"Save\"\r\n                    className='col-3 col-md-2 col-xl-1 btn btn-light newPostSubmit'\r\n                    onClick={editPost} />\r\n            </form>\r\n        </div>\r\n\r\n    return (\r\n        <div className='UserInfo d-flex position-relative'>\r\n            <Link to={'/users/' + props.post.author.id}>\r\n                <img\r\n                    className=\"PostAvatar rounded-circle align-self-start m-1 mr-2\"\r\n                    width=\"50\"\r\n                    height=\"50\"\r\n                    src={props.post.author.avatar}\r\n                    alt=\"User Avatar\" />\r\n            </Link>\r\n            <div className=\"media-body mr-2\">\r\n                <Link to={'/users/' + props.post.author.id}>\r\n                    <h5\r\n                        className=\"name\">\r\n                        {props.post.author.username}\r\n                    </h5>\r\n                </Link>\r\n                <div className=\"\">\r\n                    {editMode ? editWrapper :\r\n                        <p className='row col-12'>{props.post.content}</p>}\r\n\r\n                </div>\r\n                <LikeButton\r\n                    post={props.post}\r\n                    type={'post'}\r\n                    edit={props.editPost} />\r\n            </div>\r\n            <div className='position-absolute timeStamp'>{props.post.create_at}</div>\r\n\r\n            {/* the dropdown is indeed complicated */}\r\n            {(isAuthor) ?\r\n                ((commentOptions) ?\r\n                    <p onClick={() => toggleOptions()} className='position-relative edit-deleted-comment-post-moved'>...</p>\r\n                    : <p onClick={() => toggleOptions()} className='position-relative edit-deleted-comment-post'>...</p>)\r\n                : []}\r\n\r\n            {(commentOptions && isAuthor ?\r\n                dropDownMenu : [])}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Post;","import React, { useState, useContext } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { LoginContext } from './context'\r\nimport LikeButton from './LikeButton'\r\nconst axios = require('axios')\r\n\r\n\r\nfunction Comment(props) {\r\n\r\n    const [commentOptions, setCommentOptions] = useState(false)\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [content, setContent] = useState(\"\");\r\n    const LoginStatus = useContext(LoginContext)\r\n\r\n\r\n    function toggleOptions() {\r\n        setCommentOptions(!commentOptions)\r\n    }\r\n    function toggleEdit() {\r\n        setContent(props.post.content)\r\n        setEditMode(!editMode)\r\n        setCommentOptions(!commentOptions)\r\n    }\r\n    async function editPost(event) {\r\n        if (event && event.preventDefault) {\r\n            event.preventDefault();\r\n        }\r\n        const URL = window.location.origin + `/api/comment/${props.post.id}/`\r\n        const body = {\r\n            \"content\": content,\r\n            \"posts\": props.post.id\r\n        }\r\n\r\n        axios.defaults.headers.common['Authorization'] = 'token ' + LoginStatus.userToken\r\n\r\n        const response = await axios.put(URL, body)\r\n\r\n        if (!response.ok) {\r\n            const message = `An error has occured: ${response.status}`;\r\n        }\r\n        console.log(response)\r\n        setEditMode(false)\r\n        props.editComment(response.data)\r\n    }\r\n    function del() {\r\n        setEditMode(!editMode)\r\n    }\r\n\r\n    function keyPress(e) {\r\n        console.log(\"f\")\r\n        if (e.key === \"Escape\") {\r\n            // write your logic here.\r\n        }\r\n    }\r\n\r\n    const isAuthor = (props.post.author.id == LoginStatus.userID)\r\n\r\n    const dropDownMenu =\r\n        <div class=\"dropdown-menu d-block position-relative drop-down-edit-deleted-comment-post\">\r\n            <a onClick={toggleEdit} className=\"dropdown-item\">Edit</a>\r\n            <a class=\"dropdown-item\" >Delete</a>\r\n        </div>\r\n\r\n\r\n    const editWrapper =\r\n        <div className=\"container\">\r\n            <form id='newPost' className='row flex-row'>\r\n                <input type=\"text\"\r\n                    placeholder=\"what's in your mind?\"\r\n                    className=' col-8 col-md-9 col-xl-10 flex-grow-0 textAnswer form-control mr-2'\r\n                    name=\"answer\"\r\n                    form='newPost'\r\n                    id=\"postanswer\"\r\n                    value={content}\r\n                    onChange={(e) => setContent(e.target.value)} />\r\n                <input\r\n                    type=\"submit\"\r\n                    value=\"Save\"\r\n                    className='col-3 col-md-2 col-xl-1 btn btn-light newPostSubmit'\r\n                    onClick={editPost} />\r\n            </form>\r\n        </div>\r\n\r\n    return (\r\n        \r\n        <div className='UserInfo d-flex position-relative'>\r\n            <Link to={'/users/' + props.post.author.id}>\r\n                <img\r\n                    className=\"PostAvatar rounded-circle align-self-start m-1 mr-2\"\r\n                    width=\"50\"\r\n                    height=\"50\"\r\n                    src={props.post.author.avatar}\r\n                    alt=\"User Avatar\" />\r\n            </Link>\r\n            <div className=\"media-body mr-2\">\r\n                <Link to={'/users/' + props.post.author.id}>\r\n                    <h5\r\n                        className=\"name\">\r\n                        {props.post.author.username}\r\n                    </h5>\r\n                </Link>\r\n                <div className=\"\">\r\n                    {editMode ? editWrapper :\r\n                        <p className='row col-12'>{props.post.content}</p>}\r\n\r\n                </div>\r\n                <LikeButton\r\n                    post={props.post}\r\n                    type={'comment'}\r\n                    edit={props.editComment} />\r\n            </div>\r\n\r\n            {/* the dropdown is indeed complicated */}\r\n            {(isAuthor) ?\r\n                ((commentOptions) ?\r\n                    <p onClick={() => toggleOptions()} className='position-relative edit-deleted-comment-post-moved'>...</p>\r\n                    : <p onClick={() => toggleOptions()} className='position-relative edit-deleted-comment-post'>...</p>)\r\n                : []}\r\n\r\n            {(commentOptions && isAuthor ?\r\n                dropDownMenu : [])}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Comment;","import React from 'react';\r\nimport NewComment from '../NewComment'\r\nimport { LoginContext } from '../context'\r\nimport Post from '../Post'\r\nimport Comment from '../Comment'\r\nconst axios = require('axios')\r\n\r\n// This component is used for a single post page.\r\n\r\n\r\nclass PostView extends React.Component {\r\n    static contextType = LoginContext\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            post: false,\r\n            comments: false,\r\n            error: null\r\n        }\r\n        this.createComment = this.createComment.bind(this)\r\n        this.editComment = this.editComment.bind(this)\r\n        this.editPost = this.editPost.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.defaults.headers.common['Authorization'] = 'token ' + this.context.userToken\r\n        this.getPost()\r\n    }\r\n\r\n    createComment(data) {\r\n        // to work with strict mode\r\n        this.setState((oldState) => {\r\n            // the array is reversed\r\n            oldState.comments.push(data)\r\n            return oldState\r\n        })\r\n    }\r\n\r\n    editComment(index, data) {\r\n        this.setState((oldState) => {\r\n            oldState.comments[index] = data\r\n            return oldState\r\n        })\r\n    }\r\n\r\n    editPost(data) {\r\n        this.setState((oldState) => {\r\n            oldState.post = data\r\n            return oldState\r\n        })\r\n    }\r\n\r\n    async getPost() {\r\n        //fetch it using the this.state.friends\r\n        const baseURL = window.location.origin\r\n        let post, comments\r\n        const response1 = axios.get(baseURL + `/api/post/${this.props.match.params.postid}`)\r\n        const response2 = axios.get(baseURL + `/api/post/comment/${this.props.match.params.postid}`)\r\n        try {\r\n            [post, comments] = await Promise.all([response1, response2])\r\n        } catch (er) {\r\n            console.error(er)\r\n            this.setState((oldstate) => {\r\n                oldstate.error = `Under Maintenance`\r\n                return oldstate\r\n            })\r\n            return 0\r\n        }\r\n        comments.data = comments.data.reverse()\r\n        this.setState((oldstate) => {\r\n            oldstate.post = post.data\r\n            oldstate.comments = comments.data\r\n            return oldstate\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let Comments\r\n        if (this.state.post) {\r\n            Comments = this.state.comments.map((comment, index) => {\r\n                return <Comment\r\n                    post={comment}\r\n                    key={index}\r\n                    editComment={(content) => this.editComment(index, content)} />\r\n            })\r\n\r\n            return (\r\n                <div className=\"PostWrapWrap container mt-3\">\r\n                    <div className=\"post\">\r\n                        <Post\r\n                            post={this.state.post}\r\n                            type={'post'}\r\n                            editPost={this.editPost}  />\r\n                        <div className=\"commentsWrap\">\r\n                            {Comments}\r\n                        </div>\r\n                    </div>\r\n                    <NewComment\r\n                        rerender={this.createComment}\r\n                        post={this.state.post} />\r\n                </div>\r\n                \r\n            )\r\n        }\r\n        return (\r\n            <div className=\"PostWrapWrap container\">\r\n                {this.state.error ? this.state.error : `loading`}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PostView;","import React from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { LoginContext } from '../context'\r\n\r\nclass Access extends React.Component {\r\n\r\n    static contextType = LoginContext\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            password_retype: \"\",\r\n            email: \"\",\r\n            badrequest: \"\",\r\n            login: true,\r\n            redirect: false,\r\n        }\r\n        this.login = this.login.bind(this)\r\n        this.handleForm = this.handleForm.bind(this)\r\n        this.register = this.register.bind(this)\r\n        this.toogleRegister = this.toogleRegister.bind(this)\r\n        this.getUserAvatar = this.getUserAvatar.bind(this)\r\n\r\n\r\n    }\r\n\r\n    toogleRegister(e) {\r\n        e.preventDefault();\r\n        let b = this.state.login\r\n        this.setState(oldState => {\r\n            oldState.login = !b\r\n            return oldState\r\n        })\r\n    }\r\n\r\n\r\n    handleForm(event) {\r\n        const { name, value } = event.target\r\n        this.setState(oldState => {\r\n            oldState[name] = value\r\n            return oldState\r\n        })\r\n    }\r\n\r\n    register(e) {\r\n        e.preventDefault()\r\n        if (this.state.password_retype !== this.state.password) {\r\n            return this.setState({ badrequest: \"passwords do not match\" })\r\n\r\n        }\r\n\r\n        const URL = window.location.origin + '/api/register/'\r\n        fetch(URL, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': 2, // GET THIS RIGHT\r\n                'Content-Type': 'application/json'\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            body: JSON.stringify({\r\n                \"username\": this.state.username,\r\n                \"password\": this.state.password,\r\n                \"password_retype\": this.state.password_retype,\r\n                \"email\": this.state.email\r\n            })\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    console.log(response)\r\n                    var err = new Error(\"Incorrect credentials\");\r\n                    throw err;\r\n                }\r\n                return response.json()\r\n            })\r\n            .then(data => {\r\n                console.log(this.state)\r\n                this.login(data)\r\n            })\r\n\r\n            .catch(e => {\r\n                console.log(e)\r\n                this.setState({ badrequest: e.message })\r\n            })\r\n\r\n    }\r\n\r\n    async getUserAvatar(arg) {\r\n\r\n        const URL = window.location.origin + `/api/user/${arg.id}/`\r\n        const response = await fetch(URL, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': 'token ' + arg.token,\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        const data = await response.json() \r\n        return data.avatar\r\n    }\r\n\r\n    async login(event) {\r\n        if (event && event.preventDefault) {\r\n            event.preventDefault();\r\n        }\r\n        const URL = 'api/api-token-auth/'\r\n        const response = await fetch(URL, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                \"username\": this.state.username,\r\n                \"password\": this.state.password\r\n            })\r\n        })\r\n        if (!response.ok) {\r\n            return this.setState({ badrequest: response.error })\r\n        }\r\n        let data = await response.json()\r\n        data.avatar = await this.getUserAvatar(data)\r\n        this.context.changeLoggedIn(data)\r\n        this.setState({ redirect: true })\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            return <Redirect push to='/home' />\r\n        }\r\n\r\n        if (this.state.login) {\r\n            return (\r\n                <div className=\"container-fluid main body\">\r\n                    <div className='form d-flex justify-content-center align-items-center'>\r\n                        <form className=\"loginForm\" action={this.login}>\r\n                            <div className='form-group'>\r\n                                {this.state.badrequest ? <div class=\"alert alert-danger\" role=\"alert\">\r\n                                    {this.state.badrequest}\r\n                                </div> : <div></div>}\r\n                                <label for=\"username\" > Username</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Enter email\"\r\n                                    name=\"username\"\r\n                                    onChange={this.handleForm}\r\n                                    value={this.state.username} />\r\n                                <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n                                <br />\r\n                                <label for=\"password\" > Password</label>\r\n                                <input\r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Enter password\"\r\n                                    name=\"password\"\r\n                                    onChange={this.handleForm}\r\n                                    value={this.state.password} />\r\n                                <br />\r\n                                <div className='center-align'><input\r\n                                    type='Submit'\r\n                                    value=\"Submit\"\r\n                                    className='btn btn-primary'\r\n                                    onClick={this.login} ></input>\r\n                                    <hr class=\"solid\" />\r\n                                    <p>Or Create an Account</p>\r\n                                    <button className='btn btn-primary' onClick={this.toogleRegister}>Register</button>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div className=\"container-fluid main body\">\r\n                    <div className='form d-flex justify-content-center align-items-center'>\r\n                        <form className=\"loginForm\" action={this.register}>\r\n                            <div className='form-group'>\r\n                                {this.state.badrequest ? <div class=\"alert alert-danger\" role=\"alert\">\r\n                                    {this.state.badrequest}\r\n                                </div> : <div></div>}\r\n                                {this.state.login}\r\n                                <label for=\"username\" > Username</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Enter Username\"\r\n                                    name=\"username\"\r\n                                    onChange={this.handleForm}\r\n                                    value={this.state.username} />\r\n                                <label for=\"password\" > Password</label>\r\n                                <input\r\n                                    type=\"password\"\r\n                                    placeholder=\"Enter password\"\r\n                                    className=\"form-control\"\r\n                                    name=\"password\"\r\n                                    onChange={this.handleForm}\r\n                                    value={this.state.password} />\r\n                                <label for=\"password_retype\" > Password</label>\r\n                                <input\r\n                                    type=\"password\"\r\n                                    placeholder=\"Enter password\"\r\n                                    className=\"form-control\"\r\n                                    name=\"password_retype\"\r\n                                    onChange={this.handleForm}\r\n                                    value={this.state.password_retype} />\r\n\r\n                                <label for=\"email\" > Email</label>\r\n                                <input\r\n                                    type=\"email\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Enter email\"\r\n                                    name=\"email\"\r\n                                    onChange={this.handleForm}\r\n                                    value={this.state.email} />\r\n                                <br />\r\n                                <div className='center-align'><input\r\n                                    type='submit'\r\n                                    value=\"submit\"\r\n                                    className='btn btn-primary'\r\n                                    onClick={this.register} ></input>\r\n                                    <hr class=\"solid\" />\r\n                                    <p>Or Log In into you account</p>\r\n                                    <button className='btn btn-primary' onClick={this.toogleRegister}>Log In</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Access","import React from 'react';\r\n\r\n\r\nfunction NotFoundView(){\r\n\r\n\r\n\r\n    return(\r\n        <div className=\"notFoundWrap container\">\r\n            <div className=\"row\">\r\n                <div className=\"image col-xs-6\">\r\n                    {/* <img> PUT SOME IMAGE HERE</img> */}\r\n                </div>\r\n                <div className=\"text col-xs-6\"> There's nothing here</div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default NotFoundView;","import React, { useState, useContext } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { HouseDoor, App, People, PersonPlus, Search} from 'react-bootstrap-icons';\r\nimport { DropdownButton, Dropdown } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { LoginContext } from './context'\r\n\r\n\r\nfunction useForceUpdate(){\r\n    const [value, setValue] = useState(0); // integer state\r\n    return () => setValue(value => ++value); // update the state to force render\r\n}\r\n\r\nfunction NavBar() {\r\n\r\n\r\n\r\n\t// this is a hook, it adds \"state\" to a functional component\r\n\tconst [isSearchCollapsed, setSearchCollapse] = useState(true);\r\n\tconst history = useHistory();\r\n\tconst LoginStatus = useContext(LoginContext)\r\n\t// flip state\r\n\r\n    const forceUpdate = useForceUpdate();\r\n\r\n\tfunction signOut(){\r\n\r\n\t\tLoginStatus.changeLoggedIn()\r\n\t\t// forcing update on both the navbar and all components\r\n\t\t// forceUpdate()\r\n\t\thistory.push('/login')\r\n\t}\r\n\r\n\r\n\tconst handleSearchCollapse = () => {\r\n\t\tsetSearchCollapse(!isSearchCollapsed)\r\n\r\n\t};\r\n\r\n  \tfunction redirect(arg){\r\n\t\thistory.push(`/${arg}`)\r\n\t}\r\n\r\n\r\n\tconst CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\r\n\t\t<a\r\n\t\t  href=\"\"\r\n\t\t  ref={ref}\r\n\t\t  onClick={e => {\r\n\t\t\te.preventDefault();\r\n\t\t\tonClick(e);\r\n\t\t  }}\r\n\t\t>\r\n\t\t  {/* Render custom icon here */}\r\n\t\t  {children}\r\n\t\t</a>\r\n\t  ));\r\n\r\n\t\r\n\r\n\treturn (\r\n\t\t<nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\r\n\t\t\t<Link className=\"navbar-brand mr-auto\" to=\"/home\">\r\n\t\t\t\t<HouseDoor />\r\n\t\t\t</Link>\r\n\r\n\t\t\t{/* <button\r\n\t\t\t\tclassName=\"navbar-toggler ml-auto\"\r\n\t\t\t\ttype=\"button\"\r\n\t\t\t\tdata-toggle=\"collapse\"\r\n\t\t\t\tdata-target=\"#navbarNav\"\r\n\t\t\t\tonClick={handleNavCollapse}\r\n\t\t\t>\r\n\t\t\t\t<span className=\"navbar-toggler-icon\"></span>\r\n\t\t\t</button> */}\r\n\r\n\t\t\t{/* renders the nav bar according to the state */}\r\n\t\t\t<div className=\"navbar-expand\" id=\"navbarNav\">\r\n\t\t\t\t<ul className=\"navbar-nav ml-auto\">\r\n\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t<form \r\n\t\t\t\t\t\t\tclassName=\"mx-2 my-auto\">\r\n\t\t\t\t\t\t\t<input type=\"text\" \r\n\t\t\t\t\t\t\t\tclassName={isSearchCollapsed? 'nav-link d-none searchNavBar w-100': \"nav-link searchNavBar form-control\"} \r\n\t\t\t\t\t\t\t\tname=\"search\" \r\n\t\t\t\t\t\t\t\tid=\"searc\" />\r\n\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\r\n\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t<a className=\"nav-link\" onClick={handleSearchCollapse}>\r\n\t\t\t\t\t\t\t<Search />\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t<Link className=\"nav-link\" to=\"/index\">\r\n\t\t\t\t\t\t\t<PersonPlus />\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t<Link className=\"nav-link\" to=\"/feed\">\r\n\t\t\t\t\t\t\t<People />\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t<div className=\"nav-link\" to=\"/Examples\">\r\n\t\t\t\t\t\t\t<Dropdown>\r\n\t\t\t\t\t\t\t\t<Dropdown.Toggle as={CustomToggle} id=\"dropdown-custom-components\">\r\n\t\t\t\t\t\t\t\t\t<App />\r\n\t\t\t\t\t\t\t\t</Dropdown.Toggle>\r\n\t\t\t\t\t\t\t\t\t{LoginStatus.userToken?\r\n\t\t\t\t\t\t\t\t<Dropdown.Menu>\r\n\t\t\t\t\t\t\t\t<Dropdown.Item eventKey=\"1\" onClick={() => redirect('home')}>My Profile</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t<Dropdown.Item eventKey=\"2\" onClick={ () => redirect('myaccount')}>Edit my account</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t<Dropdown.Item eventKey=\"3\" onClick={() => signOut()}>Sign Out</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t</Dropdown.Menu>\r\n\t\t\t\t\t\t\t\t: \r\n\t\t\t\t\t\t\t\t<Dropdown.Menu>\r\n\t\t\t\t\t\t\t\t<Dropdown.Item eventKey=\"1\" onClick={() => redirect('Login')}>Login</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t</Dropdown.Menu>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</Dropdown>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t);\r\n\r\n}\r\n\r\nexport default NavBar;","import React from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport FeedView from './Views/FeedView'\r\nimport IndexView from './Views/IndexView'\r\nimport ProfileView from './Views/ProfileView'\r\nimport PostView from './Views/PostView'\r\nimport LoginView from './Views/LoginView'\r\nimport NotFoundView from './Views/NotFoundView'\r\nimport NavBar from './NavBar'\r\nimport { LoginContext } from './context'\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            userID: this.getuserID(),\r\n            userToken: this.getuserToken(),\r\n            userAvatar: this.getuserAvatar(),\r\n        }\r\n        this.getuserID = this.getuserID.bind(this)\r\n        this.getuserToken = this.getuserToken.bind(this)\r\n        this.changeLoggedIn = this.changeLoggedIn.bind(this)\r\n        this.getuserAvatar = this.getuserAvatar.bind(this)\r\n    }\r\n\r\n    changeLoggedIn(data) {\r\n        if (sessionStorage.getItem('user')) {\r\n            sessionStorage.removeItem('user')\r\n            sessionStorage.removeItem('userID')\r\n            sessionStorage.removeItem('userAvatar')\r\n            this.setState({ userToken: false, userID: false, userAvatar: false })\r\n        } else {\r\n            sessionStorage.setItem('user', data.token)\r\n            sessionStorage.setItem('userID', data.id)\r\n            sessionStorage.setItem('userAvatar', data.avatar)\r\n            this.setState({ userToken: data.token, userID: data.id, userAvatar: data.avatar })\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // at some point this can be combined into an array.....\r\n    getuserID() {\r\n        if (sessionStorage.getItem('userID')) {\r\n            return sessionStorage.getItem('userID')\r\n        }\r\n        return false\r\n    }\r\n\r\n    getuserToken() {\r\n        if (sessionStorage.getItem('user')) {\r\n            return sessionStorage.getItem('user')\r\n        }\r\n        return false\r\n    }\r\n    getuserAvatar() {\r\n        if (sessionStorage.getItem('userAvatar')) {\r\n            return sessionStorage.getItem('userAvatar')\r\n        }\r\n        return false\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <LoginContext.Provider value={{ ...this.state, changeLoggedIn: this.changeLoggedIn }} >\r\n                <div className='BackGround'>\r\n                    <NavBar />\r\n                    <Switch>\r\n                        <Route path=\"/login\" component={LoginView} />\r\n                        <Route path=\"/feed\"\r\n                            render={() => this.getuserToken() ?\r\n                                <FeedView friends={false} key={Math.random()}/> : <Redirect to=\"/login\" />} />\r\n                        <Route path=\"/index\"\r\n                            render={() => this.getuserToken() ?\r\n                                <IndexView friends={true} key={Math.random()}/> : <Redirect to=\"/login\" />} />\r\n                        <Route path=\"/home\"\r\n                            render={() => this.getuserToken() ?\r\n                                <ProfileView key={Math.random()}/> : <Redirect to=\"/login\" />} />\r\n                        <Route path=\"/users/:userid\"\r\n                            render={(props) => this.getuserToken() ?\r\n                                <ProfileView {...props} key={Math.random()}/> : <Redirect to=\"/login\" />} />\r\n                        <Route path=\"/post/:postid\"\r\n                            render={(props) => this.getuserToken() ?\r\n                                <PostView {...props} key={Math.random()}/> : <Redirect to=\"/login\" />} />\r\n                        <Route render={() => this.getuserToken() ?\r\n                            <NotFoundView key={Math.random()}/> : <Redirect to=\"/login\" />} />\r\n                    </Switch>\r\n                </div>\r\n            </LoginContext.Provider>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './App.css'\r\nimport App from './components/App.js'\r\nimport {BrowserRouter as Router} from \"react-router-dom\";\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// STORE IS THE GLOBAL CONTAINER FOR THE DATA.\r\n// ACTION IS THE WAY TO MUTATE THE STATE\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n  <Router>\r\n  <App />\r\n  </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n\r\n"],"sourceRoot":""}